//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17379
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LicenseStatus.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "11.0.0.0")]
    public sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Feature.Name")]
        public string SortProperty {
            get {
                return ((string)(this["SortProperty"]));
            }
            set {
                this["SortProperty"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Ascending")]
        public global::System.ComponentModel.ListSortDirection SortDirection {
            get {
                return ((global::System.ComponentModel.ListSortDirection)(this["SortDirection"]));
            }
            set {
                this["SortDirection"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool ShowUnusedFeatures {
            get {
                return ((bool)(this["ShowUnusedFeatures"]));
            }
            set {
                this["ShowUnusedFeatures"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool UpgradeSettings {
            get {
                return ((bool)(this["UpgradeSettings"]));
            }
            set {
                this["UpgradeSettings"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string UtilityProgramExecutable {
            get {
                return ((string)(this["UtilityProgramExecutable"]));
            }
            set {
                this["UtilityProgramExecutable"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Collections.Generic.List<CWBozarth.LicenseManager.License> Licenses {
            get {
                return ((global::System.Collections.Generic.List<CWBozarth.LicenseManager.License>)(this["Licenses"]));
            }
            set {
                this["Licenses"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("54")]
        public global::System.Windows.GridLength LicensePropertiesPanelHeight {
            get {
                return ((global::System.Windows.GridLength)(this["LicensePropertiesPanelHeight"]));
            }
            set {
                this["LicensePropertiesPanelHeight"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool ShowReport {
            get {
                return ((bool)(this["ShowReport"]));
            }
            set {
                this["ShowReport"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("200")]
        public double ReportPanelWidth {
            get {
                return ((double)(this["ReportPanelWidth"]));
            }
            set {
                this["ReportPanelWidth"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LicenseStatus.WINDOWPLACEMENT WindowPlacement {
            get {
                return ((global::LicenseStatus.WINDOWPLACEMENT)(this["WindowPlacement"]));
            }
            set {
                this["WindowPlacement"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
      <ArrayOfString xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
        <string>Handle</string>
        <string>Display</string>
        <string>Port</string>
        <string>Server</string>
        <string>Vendor</string>
        <string>Type</string>
        <string>Used</string>
        <string>Borrowed</string>
      </ArrayOfString>")]
        public global::System.Collections.Generic.List<string> HiddenColumns {
            get {
                return ((global::System.Collections.Generic.List<string>)(this["HiddenColumns"]));
            }
            set {
                this["HiddenColumns"] = value;
            }
        }
    }
}
